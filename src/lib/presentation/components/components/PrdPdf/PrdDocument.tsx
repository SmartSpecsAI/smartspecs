import { Document, Page, Text, View, StyleSheet } from '@react-pdf/renderer';
import styles from './PrdDocumentStyles';

export const PrdDocument = ({ prd }: { prd: any }) => (
  <Document>
    <Page style={styles.page}>

      {/* Header */}
      <View style={styles.headerContainer}>
        <Text style={styles.header}>Product Requirements Document (PRD)</Text>
      </View>

      {/* Project Information */}
      <View style={styles.projectInfo}>
        <Text style={styles.infoText}>Project: {prd.project}</Text>
        <Text style={styles.infoText}>Client: {prd.clientRepresentative}</Text>
        <Text style={styles.infoText}>Status: {prd.status}</Text>
        <Text style={styles.infoText}>Date: {new Date().toLocaleDateString()}</Text>
      </View>

      {/* Description */}
      <Text style={styles.sectionTitle}>Description</Text>
      <Text style={styles.text}>{prd.description}</Text>

      {/* Requirements */}
      <Text style={styles.sectionTitle}>Requirement Items</Text>
      {prd.requirements.map((item: any, index: any) => (
        <View key={index} style={styles.requirementBox}>
          <Text style={styles.requirementTitle}>{item.title}</Text>
          <Text style={styles.text}>{item.description}</Text>
          <Text style={styles.text}>
            <Text style={{ fontWeight: 'bold' }}>Type:</Text> {item.type} |{' '}
            <Text style={{ fontWeight: 'bold' }}>Time:</Text> {item.estimatedTime} days |{' '}
            <Text style={{ fontWeight: 'bold' }}>Priority:</Text>
            <Text
              style={[
                styles.label,
                item.priority === 'High'
                  ? styles.high
                  : item.priority === 'Medium'
                  ? styles.medium
                  : styles.low,
              ]}
            >
              {item.priority}
            </Text>
          </Text>
          <Text style={styles.actionItemsTitle}>âœ… Action Items:</Text>
          {item.actionItems && item.actionItems.length > 0 ? (
            item.actionItems.map((action: any, i: any) => (
              <Text key={i} style={styles.actionItem}>
                - {action}
              </Text>
            ))
          ) : (
            <Text style={styles.actionItem}>No action items available.</Text>
          )}
        </View>
      ))}

      {/* Footer */}
      <Text style={styles.footer}>Generated by SmartSpecs</Text>
      <Text
        style={styles.pageNumber}
        render={({ pageNumber, totalPages }) => `${pageNumber} / ${totalPages}`}
      />
    </Page>
  </Document>
);